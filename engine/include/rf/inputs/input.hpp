#pragma once

namespace rf {

namespace Inputs {
    enum class Input {
        None,

        // Keyboard
        Key_F1,
		Key_F2,
		Key_F3,
		Key_F4,
		Key_F5,
        Key_F6,
		Key_F7,
		Key_F8,
		Key_F9,
		Key_F10,
        Key_F11,
		Key_F12,
		Key_F13,
		Key_F14,
		Key_F15,
        Key_F16,
		Key_F17,
		Key_F18,
		Key_F19,
		Key_F20,
        Key_F21,
		Key_F22,
		Key_F23,
		Key_F24,
		Key_F25,
        Key_0,
		Key_1,
		Key_2,
		Key_3,
		Key_4,
        Key_5,
		Key_6,
		Key_7,
		Key_8,
		Key_9,
        Key_A,
		Key_B,
		Key_C,
		Key_D,
		Key_E,
		Key_F,
		Key_G,
		Key_H,
		Key_I,
		Key_J,
		Key_K,
		Key_L,
		Key_M,
        Key_N,
		Key_O,
		Key_P,
		Key_Q,
		Key_R,
		Key_S,
		Key_T,
		Key_U,
		Key_V,
		Key_W,
		Key_X,
		Key_Y,
		Key_Z,
        Key_Minus,
		Key_Equal,
        Key_Space,
		Key_Backspace,
        Key_LeftBracket,
		Key_RightBracket,
        Key_Backtick,
		Key_Tab,
        Key_Semicolon,
		Key_Apostrophe,
        Key_Comma,
		Key_Period,
        Key_Slash,
		Key_Backslash,
        Key_Escape,
		Key_Enter,
        Key_LeftShift,
		Key_RightShift,
        Key_LeftControl,
		Key_RightControl,
        Key_LeftAlt,
		Key_RightAlt,
        Key_LeftSuper,
		Key_RightSuper,
        Key_PrintScreen,
		Key_Pause,
        Key_Insert,
		Key_Delete,
        Key_Home,
		Key_End,
        Key_PageUp,
		Key_PageDown,
        Key_ArrowUp,
		Key_ArrowDown,
        Key_ArrowLeft,
		Key_ArrowRight,
        Key_CapsLock,
		Key_ScrollLock,
		Key_NumLock,
        Key_Numpad0,
		Key_Numpad1,
		Key_Numpad2,
		Key_Numpad3,
		Key_Numpad4,
        Key_Numpad5,
		Key_Numpad6,
		Key_Numpad7,
		Key_Numpad8,
		Key_Numpad9,
        Key_NumpadDecimal,
		Key_NumpadEqual,
		Key_NumpadEnter,
        Key_NumpadDivide,
		Key_NumpadMultiply,
        Key_NumpadSubtract,
		Key_NumpadAdd,

		// Mouse
		Mouse_Button1,	// LMB (Left mouse button)
		Mouse_Button2,	// RMB (Right mouse button)
		Mouse_Button3,	// MMB (Middle mouse button)
		Mouse_Button4,
		Mouse_Button5,
		Mouse_Button6,
		Mouse_Button7,
		Mouse_Button8,

		// Special (no GLFW macro)
		Special_CursorMove,
		Special_Scroll,
	};

	bool IsSpecialInput(Input input);

	const char* InputName(Input input);

	Input GlfwMacroToInput(int input);

	int InputToGlfwMacro(Input input);
}

} // namespace rf
